import axios from "axios";
import { Guild } from "discord.js";
import prisma from "../../../handlers/prisma";
import encryption from "../../../helpers/encryption";
import { IEncryptionData } from "../../../interfaces/EncryptionData";

interface ApiCredentials {
  url: IEncryptionData;
  token: IEncryptionData;
  [key: string]: unknown;
}

export default async (
  guild: Guild,
  code: string,
  amount: number,
  uses: number
) => {
  const apiCredentials = await prisma.apiCredentials.findUnique({
    where: {
      guildId_apiName: {
        guildId: guild.id,
        apiName: "Ctrlpanel.gg",
      },
    },
  });

  if (!apiCredentials || !apiCredentials.credentials) {
    throw new Error(
      "Please ask the server administrator to configure the CtrlPanel.gg API credentials for this guild to enable this functionality."
    );
  }

  const { url, token } = apiCredentials.credentials as ApiCredentials;

  const plainUrl = encryption.decrypt(url);
  const plainToken = encryption.decrypt(token);

  const api = axios.create({
    baseURL: plainUrl,
    headers: {
      Authorization: plainToken ? `Bearer ${plainToken}` : undefined,
    },
  });

  const shopUrl = `${plainUrl}/store`;

  await api.post("vouchers", {
    uses,
    code,
    credits: amount,
    memo: `Generated by Discord Bot: ${guild.client.user.tag}`,
  });

  return { redeemUrl: `${shopUrl}?voucher=${code}` };
};
